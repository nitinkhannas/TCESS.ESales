//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class userpaymentmodemapping : EntityBase
    {
        #region Primitive Properties
    
        public virtual int UPM_Id
        {
            get;
            set;
        }
    
        public virtual int UPM_UserId
        {
            get { return _uPM_UserId; }
            set
            {
                if (_uPM_UserId != value)
                {
                    if (my_aspnet_users != null && my_aspnet_users.id != value)
                    {
                        my_aspnet_users = null;
                    }
                    _uPM_UserId = value;
                }
            }
        }
        private int _uPM_UserId;
    
        public virtual int UPM_PaymentMode
        {
            get { return _uPM_PaymentMode; }
            set
            {
                if (_uPM_PaymentMode != value)
                {
                    if (paymentmode != null && paymentmode.Paymentmode_Id != value)
                    {
                        paymentmode = null;
                    }
                    _uPM_PaymentMode = value;
                }
            }
        }
        private int _uPM_PaymentMode;
    
        public virtual int UPM_CreatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UPM_LastUpdatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> UPM_IsDeleted
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual my_aspnet_users my_aspnet_users
        {
            get { return _my_aspnet_users; }
            set
            {
                if (!ReferenceEquals(_my_aspnet_users, value))
                {
                    var previousValue = _my_aspnet_users;
                    _my_aspnet_users = value;
                    Fixupmy_aspnet_users(previousValue);
                }
            }
        }
        private my_aspnet_users _my_aspnet_users;
    
        public virtual paymentmode paymentmode
        {
            get { return _paymentmode; }
            set
            {
                if (!ReferenceEquals(_paymentmode, value))
                {
                    var previousValue = _paymentmode;
                    _paymentmode = value;
                    Fixuppaymentmode(previousValue);
                }
            }
        }
        private paymentmode _paymentmode;

        #endregion
        #region Association Fixup
    
        private void Fixupmy_aspnet_users(my_aspnet_users previousValue)
        {
            if (previousValue != null && previousValue.userpaymentmodemappings.Contains(this))
            {
                previousValue.userpaymentmodemappings.Remove(this);
            }
    
            if (my_aspnet_users != null)
            {
                if (!my_aspnet_users.userpaymentmodemappings.Contains(this))
                {
                    my_aspnet_users.userpaymentmodemappings.Add(this);
                }
                if (UPM_UserId != my_aspnet_users.id)
                {
                    UPM_UserId = my_aspnet_users.id;
                }
            }
        }
    
        private void Fixuppaymentmode(paymentmode previousValue)
        {
            if (previousValue != null && previousValue.userpaymentmodemappings.Contains(this))
            {
                previousValue.userpaymentmodemappings.Remove(this);
            }
    
            if (paymentmode != null)
            {
                if (!paymentmode.userpaymentmodemappings.Contains(this))
                {
                    paymentmode.userpaymentmodemappings.Add(this);
                }
                if (UPM_PaymentMode != paymentmode.Paymentmode_Id)
                {
                    UPM_PaymentMode = paymentmode.Paymentmode_Id;
                }
            }
        }

        #endregion
    }
}
