//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class truckdetail : EntityBase
    {
        #region Primitive Properties
    
        public virtual int Truck_Id
        {
            get;
            set;
        }
    
        public virtual int Truck_CustomerId
        {
            get { return _truck_CustomerId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_truck_CustomerId != value)
                    {
                        if (customer != null && customer.Cust_Id != value)
                        {
                            customer = null;
                        }
                        _truck_CustomerId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _truck_CustomerId;
    
        public virtual string Truck_RegNo
        {
            get;
            set;
        }
    
        public virtual string Truck_OwnerName
        {
            get;
            set;
        }
    
        public virtual string Truck_OwnerShortName
        {
            get;
            set;
        }
    
        public virtual string Truck_OwnerShortAdd
        {
            get;
            set;
        }
    
        public virtual string Truck_DriverName
        {
            get;
            set;
        }
    
        public virtual string Truck_DriverShortName
        {
            get;
            set;
        }
    
        public virtual string Truck_DriverShortAdd
        {
            get;
            set;
        }
    
        public virtual string Truck_Address
        {
            get;
            set;
        }
    
        public virtual int Truck_State
        {
            get { return _truck_State; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_truck_State != value)
                    {
                        if (state != null && state.State_Id != value)
                        {
                            state = null;
                        }
                        _truck_State = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _truck_State;
    
        public virtual string Truck_MobileNo
        {
            get;
            set;
        }
    
        public virtual string Truck_PhoneNo
        {
            get;
            set;
        }
    
        public virtual int Truck_Wheeler
        {
            get;
            set;
        }
    
        public virtual int Truck_CarryCapacity
        {
            get;
            set;
        }
    
        public virtual int Truck_Make
        {
            get { return _truck_Make; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_truck_Make != value)
                    {
                        if (truckmake != null && truckmake.TruckMake_Id != value)
                        {
                            truckmake = null;
                        }
                        _truck_Make = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _truck_Make;
    
        public virtual bool Truck_IsBlacklisted
        {
            get;
            set;
        }
    
        public virtual string Truck_BlacklistedBy
        {
            get;
            set;
        }
    
        public virtual int Truck_CreatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Truck_CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Truck_LastUpdatedDate
        {
            get;
            set;
        }
    
        public virtual bool Truck_IsDeleted
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Truck_RegType
        {
            get { return _truck_RegType; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_truck_RegType != value)
                    {
                        if (truckregtype != null && truckregtype.TruckRegType_Id != value)
                        {
                            truckregtype = null;
                        }
                        _truck_RegType = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _truck_RegType;
    
        public virtual bool Truck_IsSuspended
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<booking> bookings
        {
            get
            {
                if (_bookings == null)
                {
                    var newCollection = new FixupCollection<booking>();
                    newCollection.CollectionChanged += Fixupbookings;
                    _bookings = newCollection;
                }
                return _bookings;
            }
            set
            {
                if (!ReferenceEquals(_bookings, value))
                {
                    var previousValue = _bookings as FixupCollection<booking>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupbookings;
                    }
                    _bookings = value;
                    var newValue = value as FixupCollection<booking>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupbookings;
                    }
                }
            }
        }
        private ICollection<booking> _bookings;
    
        public virtual customer customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    Fixupcustomer(previousValue);
                }
            }
        }
        private customer _customer;
    
        public virtual state state
        {
            get { return _state; }
            set
            {
                if (!ReferenceEquals(_state, value))
                {
                    var previousValue = _state;
                    _state = value;
                    Fixupstate(previousValue);
                }
            }
        }
        private state _state;
    
        public virtual truckregtype truckregtype
        {
            get { return _truckregtype; }
            set
            {
                if (!ReferenceEquals(_truckregtype, value))
                {
                    var previousValue = _truckregtype;
                    _truckregtype = value;
                    Fixuptruckregtype(previousValue);
                }
            }
        }
        private truckregtype _truckregtype;
    
        public virtual truckmake truckmake
        {
            get { return _truckmake; }
            set
            {
                if (!ReferenceEquals(_truckmake, value))
                {
                    var previousValue = _truckmake;
                    _truckmake = value;
                    Fixuptruckmake(previousValue);
                }
            }
        }
        private truckmake _truckmake;
    
        public virtual ICollection<truckdocdetail> truckdocdetails
        {
            get
            {
                if (_truckdocdetails == null)
                {
                    var newCollection = new FixupCollection<truckdocdetail>();
                    newCollection.CollectionChanged += Fixuptruckdocdetails;
                    _truckdocdetails = newCollection;
                }
                return _truckdocdetails;
            }
            set
            {
                if (!ReferenceEquals(_truckdocdetails, value))
                {
                    var previousValue = _truckdocdetails as FixupCollection<truckdocdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptruckdocdetails;
                    }
                    _truckdocdetails = value;
                    var newValue = value as FixupCollection<truckdocdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptruckdocdetails;
                    }
                }
            }
        }
        private ICollection<truckdocdetail> _truckdocdetails;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixupcustomer(customer previousValue)
        {
            if (previousValue != null && previousValue.truckdetails.Contains(this))
            {
                previousValue.truckdetails.Remove(this);
            }
    
            if (customer != null)
            {
                if (!customer.truckdetails.Contains(this))
                {
                    customer.truckdetails.Add(this);
                }
                if (Truck_CustomerId != customer.Cust_Id)
                {
                    Truck_CustomerId = customer.Cust_Id;
                }
            }
        }
    
        private void Fixupstate(state previousValue)
        {
            if (previousValue != null && previousValue.truckdetails.Contains(this))
            {
                previousValue.truckdetails.Remove(this);
            }
    
            if (state != null)
            {
                if (!state.truckdetails.Contains(this))
                {
                    state.truckdetails.Add(this);
                }
                if (Truck_State != state.State_Id)
                {
                    Truck_State = state.State_Id;
                }
            }
        }
    
        private void Fixuptruckregtype(truckregtype previousValue)
        {
            if (previousValue != null && previousValue.truckdetails.Contains(this))
            {
                previousValue.truckdetails.Remove(this);
            }
    
            if (truckregtype != null)
            {
                if (!truckregtype.truckdetails.Contains(this))
                {
                    truckregtype.truckdetails.Add(this);
                }
                if (Truck_RegType != truckregtype.TruckRegType_Id)
                {
                    Truck_RegType = truckregtype.TruckRegType_Id;
                }
            }
            else if (!_settingFK)
            {
                Truck_RegType = null;
            }
        }
    
        private void Fixuptruckmake(truckmake previousValue)
        {
            if (previousValue != null && previousValue.truckdetails.Contains(this))
            {
                previousValue.truckdetails.Remove(this);
            }
    
            if (truckmake != null)
            {
                if (!truckmake.truckdetails.Contains(this))
                {
                    truckmake.truckdetails.Add(this);
                }
                if (Truck_Make != truckmake.TruckMake_Id)
                {
                    Truck_Make = truckmake.TruckMake_Id;
                }
            }
        }
    
        private void Fixupbookings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (booking item in e.NewItems)
                {
                    item.truckdetail = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (booking item in e.OldItems)
                {
                    if (ReferenceEquals(item.truckdetail, this))
                    {
                        item.truckdetail = null;
                    }
                }
            }
        }
    
        private void Fixuptruckdocdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (truckdocdetail item in e.NewItems)
                {
                    item.truckdetail = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (truckdocdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.truckdetail, this))
                    {
                        item.truckdetail = null;
                    }
                }
            }
        }

        #endregion
    }
}
