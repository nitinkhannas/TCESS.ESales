//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class truckmake : EntityBase
    {
        #region Primitive Properties
    
        public virtual int TruckMake_Id
        {
            get;
            set;
        }
    
        public virtual string TruckMake_Name
        {
            get;
            set;
        }
    
        public virtual int TruckMake_TruckWheeler_Id
        {
            get { return _truckMake_TruckWheeler_Id; }
            set
            {
                if (_truckMake_TruckWheeler_Id != value)
                {
                    if (truckcarrycapacity != null && truckcarrycapacity.TruckCC_Id != value)
                    {
                        truckcarrycapacity = null;
                    }
                    if (truckwheeler != null && truckwheeler.TruckWheeler_Id != value)
                    {
                        truckwheeler = null;
                    }
                    _truckMake_TruckWheeler_Id = value;
                }
            }
        }
        private int _truckMake_TruckWheeler_Id;
    
        public virtual int TruckMake_TruckCC_Id
        {
            get;
            set;
        }
    
        public virtual int TruckMake_CreatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> TruckMake_CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> TruckMake_LastUpdatedDate
        {
            get;
            set;
        }
    
        public virtual bool TruckMake_IsDeleted
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<standalonetruck> standalonetrucks
        {
            get
            {
                if (_standalonetrucks == null)
                {
                    var newCollection = new FixupCollection<standalonetruck>();
                    newCollection.CollectionChanged += Fixupstandalonetrucks;
                    _standalonetrucks = newCollection;
                }
                return _standalonetrucks;
            }
            set
            {
                if (!ReferenceEquals(_standalonetrucks, value))
                {
                    var previousValue = _standalonetrucks as FixupCollection<standalonetruck>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupstandalonetrucks;
                    }
                    _standalonetrucks = value;
                    var newValue = value as FixupCollection<standalonetruck>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupstandalonetrucks;
                    }
                }
            }
        }
        private ICollection<standalonetruck> _standalonetrucks;
    
        public virtual truckcarrycapacity truckcarrycapacity
        {
            get { return _truckcarrycapacity; }
            set
            {
                if (!ReferenceEquals(_truckcarrycapacity, value))
                {
                    var previousValue = _truckcarrycapacity;
                    _truckcarrycapacity = value;
                    Fixuptruckcarrycapacity(previousValue);
                }
            }
        }
        private truckcarrycapacity _truckcarrycapacity;
    
        public virtual ICollection<truckdetail> truckdetails
        {
            get
            {
                if (_truckdetails == null)
                {
                    var newCollection = new FixupCollection<truckdetail>();
                    newCollection.CollectionChanged += Fixuptruckdetails;
                    _truckdetails = newCollection;
                }
                return _truckdetails;
            }
            set
            {
                if (!ReferenceEquals(_truckdetails, value))
                {
                    var previousValue = _truckdetails as FixupCollection<truckdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptruckdetails;
                    }
                    _truckdetails = value;
                    var newValue = value as FixupCollection<truckdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptruckdetails;
                    }
                }
            }
        }
        private ICollection<truckdetail> _truckdetails;
    
        public virtual truckwheeler truckwheeler
        {
            get { return _truckwheeler; }
            set
            {
                if (!ReferenceEquals(_truckwheeler, value))
                {
                    var previousValue = _truckwheeler;
                    _truckwheeler = value;
                    Fixuptruckwheeler(previousValue);
                }
            }
        }
        private truckwheeler _truckwheeler;

        #endregion
        #region Association Fixup
    
        private void Fixuptruckcarrycapacity(truckcarrycapacity previousValue)
        {
            if (previousValue != null && previousValue.truckmakes.Contains(this))
            {
                previousValue.truckmakes.Remove(this);
            }
    
            if (truckcarrycapacity != null)
            {
                if (!truckcarrycapacity.truckmakes.Contains(this))
                {
                    truckcarrycapacity.truckmakes.Add(this);
                }
                if (TruckMake_TruckWheeler_Id != truckcarrycapacity.TruckCC_Id)
                {
                    TruckMake_TruckWheeler_Id = truckcarrycapacity.TruckCC_Id;
                }
            }
        }
    
        private void Fixuptruckwheeler(truckwheeler previousValue)
        {
            if (previousValue != null && previousValue.truckmakes.Contains(this))
            {
                previousValue.truckmakes.Remove(this);
            }
    
            if (truckwheeler != null)
            {
                if (!truckwheeler.truckmakes.Contains(this))
                {
                    truckwheeler.truckmakes.Add(this);
                }
                if (TruckMake_TruckWheeler_Id != truckwheeler.TruckWheeler_Id)
                {
                    TruckMake_TruckWheeler_Id = truckwheeler.TruckWheeler_Id;
                }
            }
        }
    
        private void Fixupstandalonetrucks(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (standalonetruck item in e.NewItems)
                {
                    item.truckmake = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (standalonetruck item in e.OldItems)
                {
                    if (ReferenceEquals(item.truckmake, this))
                    {
                        item.truckmake = null;
                    }
                }
            }
        }
    
        private void Fixuptruckdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (truckdetail item in e.NewItems)
                {
                    item.truckmake = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (truckdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.truckmake, this))
                    {
                        item.truckmake = null;
                    }
                }
            }
        }

        #endregion
    }
}
