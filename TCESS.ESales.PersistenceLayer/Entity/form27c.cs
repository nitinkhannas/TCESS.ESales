//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class form27c : EntityBase
    {
        #region Primitive Properties
    
        public virtual int Form27C_Id
        {
            get;
            set;
        }
    
        public virtual System.DateTime ReceivedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> AcceptedByTSLDate
        {
            get;
            set;
        }
    
        public virtual string ValidMonth
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CreatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> ModifiedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ModifiedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<int> IsSubmitted
        {
            get;
            set;
        }
    
        public virtual Nullable<int> IsAffidavitSubmitted
        {
            get;
            set;
        }
    
        public virtual int Cust_Id
        {
            get { return _cust_Id; }
            set
            {
                if (_cust_Id != value)
                {
                    if (customer != null && customer.Cust_Id != value)
                    {
                        customer = null;
                    }
                    _cust_Id = value;
                }
            }
        }
        private int _cust_Id;
    
        public virtual Nullable<int> NumberOfTrips
        {
            get;
            set;
        }
    
        public virtual Nullable<int> AllotedQuantity
        {
            get;
            set;
        }
    
        public virtual Nullable<int> QuantityLifted
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PeriodType
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> AffidavitSubmitDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> AffidavitExpiryDate
        {
            get;
            set;
        }
    
        public virtual string ValidYear
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ValidMonthCount
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CurrentMonth
        {
            get;
            set;
        }
    
        public virtual string RejectionReason
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual customer customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    Fixupcustomer(previousValue);
                }
            }
        }
        private customer _customer;

        #endregion
        #region Association Fixup
    
        private void Fixupcustomer(customer previousValue)
        {
            if (previousValue != null && previousValue.form27c.Contains(this))
            {
                previousValue.form27c.Remove(this);
            }
    
            if (customer != null)
            {
                if (!customer.form27c.Contains(this))
                {
                    customer.form27c.Add(this);
                }
                if (Cust_Id != customer.Cust_Id)
                {
                    Cust_Id = customer.Cust_Id;
                }
            }
        }

        #endregion
    }
}
