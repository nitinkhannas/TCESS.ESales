//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class paymentrefund : EntityBase
    {
        #region Primitive Properties
    
        public virtual int PR_ID
        {
            get;
            set;
        }
    
        public virtual int PR_CustID
        {
            get { return _pR_CustID; }
            set
            {
                if (_pR_CustID != value)
                {
                    if (customer != null && customer.Cust_Id != value)
                    {
                        customer = null;
                    }
                    _pR_CustID = value;
                }
            }
        }
        private int _pR_CustID;
    
        public virtual string PR_VadidatedID
        {
            get;
            set;
        }
    
        public virtual decimal PR_Amount
        {
            get;
            set;
        }
    
        public virtual int PR_PaymentMode
        {
            get { return _pR_PaymentMode; }
            set
            {
                if (_pR_PaymentMode != value)
                {
                    if (paymentmode != null && paymentmode.Paymentmode_Id != value)
                    {
                        paymentmode = null;
                    }
                    _pR_PaymentMode = value;
                }
            }
        }
        private int _pR_PaymentMode;
    
        public virtual string PR_InstrumentNo
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PR_BankDrawn
        {
            get;
            set;
        }
    
        public virtual string PR_BankIFSCCode
        {
            get;
            set;
        }
    
        public virtual string PR_Remarks
        {
            get;
            set;
        }
    
        public virtual string PR_BankBranch
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> PR_InstrumentDate
        {
            get;
            set;
        }
    
        public virtual string PR_ReceiverName
        {
            get;
            set;
        }
    
        public virtual string PR_MobileNumber
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> PR_CreatedDate
        {
            get;
            set;
        }
    
        public virtual int PR_CreatedBy
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual customer customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    Fixupcustomer(previousValue);
                }
            }
        }
        private customer _customer;
    
        public virtual paymentmode paymentmode
        {
            get { return _paymentmode; }
            set
            {
                if (!ReferenceEquals(_paymentmode, value))
                {
                    var previousValue = _paymentmode;
                    _paymentmode = value;
                    Fixuppaymentmode(previousValue);
                }
            }
        }
        private paymentmode _paymentmode;

        #endregion
        #region Association Fixup
    
        private void Fixupcustomer(customer previousValue)
        {
            if (previousValue != null && previousValue.paymentrefunds.Contains(this))
            {
                previousValue.paymentrefunds.Remove(this);
            }
    
            if (customer != null)
            {
                if (!customer.paymentrefunds.Contains(this))
                {
                    customer.paymentrefunds.Add(this);
                }
                if (PR_CustID != customer.Cust_Id)
                {
                    PR_CustID = customer.Cust_Id;
                }
            }
        }
    
        private void Fixuppaymentmode(paymentmode previousValue)
        {
            if (previousValue != null && previousValue.paymentrefunds.Contains(this))
            {
                previousValue.paymentrefunds.Remove(this);
            }
    
            if (paymentmode != null)
            {
                if (!paymentmode.paymentrefunds.Contains(this))
                {
                    paymentmode.paymentrefunds.Add(this);
                }
                if (PR_PaymentMode != paymentmode.Paymentmode_Id)
                {
                    PR_PaymentMode = paymentmode.Paymentmode_Id;
                }
            }
        }

        #endregion
    }
}
