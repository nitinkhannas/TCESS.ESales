//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class standalonetruck : EntityBase
    {
        #region Primitive Properties
    
        public virtual int StandaloneTruck_Id
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_RegNo
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_OwnerName
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_OwnerShortAdd
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_DriverName
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_DriverShortAdd
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_Address
        {
            get;
            set;
        }
    
        public virtual int StandaloneTruck_State
        {
            get { return _standaloneTruck_State; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_standaloneTruck_State != value)
                    {
                        if (state != null && state.State_Id != value)
                        {
                            state = null;
                        }
                        _standaloneTruck_State = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _standaloneTruck_State;
    
        public virtual string StandaloneTruck_MobileNo
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_PhoneNo
        {
            get;
            set;
        }
    
        public virtual int StandaloneTruck_Make
        {
            get { return _standaloneTruck_Make; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_standaloneTruck_Make != value)
                    {
                        if (truckmake != null && truckmake.TruckMake_Id != value)
                        {
                            truckmake = null;
                        }
                        _standaloneTruck_Make = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _standaloneTruck_Make;
    
        public virtual bool StandaloneTruck_IsBlacklisted
        {
            get;
            set;
        }
    
        public virtual string StandaloneTruck_Blacklistedby
        {
            get;
            set;
        }
    
        public virtual int StandaloneTruck_CreatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> StandaloneTruck_CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> StandaloneTruck_LastUpdatedDate
        {
            get;
            set;
        }
    
        public virtual bool StandaloneTruck_IsDeleted
        {
            get;
            set;
        }
    
        public virtual Nullable<int> StandaloneTruck_RegType
        {
            get { return _standaloneTruck_RegType; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_standaloneTruck_RegType != value)
                    {
                        if (truckregtype != null && truckregtype.TruckRegType_Id != value)
                        {
                            truckregtype = null;
                        }
                        _standaloneTruck_RegType = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _standaloneTruck_RegType;
    
        public virtual string StandaloneTruck_CustCode
        {
            get;
            set;
        }
    
        public virtual bool StandaloneTruck_IsSuspended
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<booking> bookings
        {
            get
            {
                if (_bookings == null)
                {
                    var newCollection = new FixupCollection<booking>();
                    newCollection.CollectionChanged += Fixupbookings;
                    _bookings = newCollection;
                }
                return _bookings;
            }
            set
            {
                if (!ReferenceEquals(_bookings, value))
                {
                    var previousValue = _bookings as FixupCollection<booking>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupbookings;
                    }
                    _bookings = value;
                    var newValue = value as FixupCollection<booking>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupbookings;
                    }
                }
            }
        }
        private ICollection<booking> _bookings;
    
        public virtual ICollection<standalonetruckdocdetail> standalonetruckdocdetails
        {
            get
            {
                if (_standalonetruckdocdetails == null)
                {
                    var newCollection = new FixupCollection<standalonetruckdocdetail>();
                    newCollection.CollectionChanged += Fixupstandalonetruckdocdetails;
                    _standalonetruckdocdetails = newCollection;
                }
                return _standalonetruckdocdetails;
            }
            set
            {
                if (!ReferenceEquals(_standalonetruckdocdetails, value))
                {
                    var previousValue = _standalonetruckdocdetails as FixupCollection<standalonetruckdocdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupstandalonetruckdocdetails;
                    }
                    _standalonetruckdocdetails = value;
                    var newValue = value as FixupCollection<standalonetruckdocdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupstandalonetruckdocdetails;
                    }
                }
            }
        }
        private ICollection<standalonetruckdocdetail> _standalonetruckdocdetails;
    
        public virtual truckmake truckmake
        {
            get { return _truckmake; }
            set
            {
                if (!ReferenceEquals(_truckmake, value))
                {
                    var previousValue = _truckmake;
                    _truckmake = value;
                    Fixuptruckmake(previousValue);
                }
            }
        }
        private truckmake _truckmake;
    
        public virtual state state
        {
            get { return _state; }
            set
            {
                if (!ReferenceEquals(_state, value))
                {
                    var previousValue = _state;
                    _state = value;
                    Fixupstate(previousValue);
                }
            }
        }
        private state _state;
    
        public virtual truckregtype truckregtype
        {
            get { return _truckregtype; }
            set
            {
                if (!ReferenceEquals(_truckregtype, value))
                {
                    var previousValue = _truckregtype;
                    _truckregtype = value;
                    Fixuptruckregtype(previousValue);
                }
            }
        }
        private truckregtype _truckregtype;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixuptruckmake(truckmake previousValue)
        {
            if (previousValue != null && previousValue.standalonetrucks.Contains(this))
            {
                previousValue.standalonetrucks.Remove(this);
            }
    
            if (truckmake != null)
            {
                if (!truckmake.standalonetrucks.Contains(this))
                {
                    truckmake.standalonetrucks.Add(this);
                }
                if (StandaloneTruck_Make != truckmake.TruckMake_Id)
                {
                    StandaloneTruck_Make = truckmake.TruckMake_Id;
                }
            }
        }
    
        private void Fixupstate(state previousValue)
        {
            if (previousValue != null && previousValue.standalonetrucks.Contains(this))
            {
                previousValue.standalonetrucks.Remove(this);
            }
    
            if (state != null)
            {
                if (!state.standalonetrucks.Contains(this))
                {
                    state.standalonetrucks.Add(this);
                }
                if (StandaloneTruck_State != state.State_Id)
                {
                    StandaloneTruck_State = state.State_Id;
                }
            }
        }
    
        private void Fixuptruckregtype(truckregtype previousValue)
        {
            if (previousValue != null && previousValue.standalonetrucks.Contains(this))
            {
                previousValue.standalonetrucks.Remove(this);
            }
    
            if (truckregtype != null)
            {
                if (!truckregtype.standalonetrucks.Contains(this))
                {
                    truckregtype.standalonetrucks.Add(this);
                }
                if (StandaloneTruck_RegType != truckregtype.TruckRegType_Id)
                {
                    StandaloneTruck_RegType = truckregtype.TruckRegType_Id;
                }
            }
            else if (!_settingFK)
            {
                StandaloneTruck_RegType = null;
            }
        }
    
        private void Fixupbookings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (booking item in e.NewItems)
                {
                    item.standalonetruck = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (booking item in e.OldItems)
                {
                    if (ReferenceEquals(item.standalonetruck, this))
                    {
                        item.standalonetruck = null;
                    }
                }
            }
        }
    
        private void Fixupstandalonetruckdocdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (standalonetruckdocdetail item in e.NewItems)
                {
                    item.standalonetruck = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (standalonetruckdocdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.standalonetruck, this))
                    {
                        item.standalonetruck = null;
                    }
                }
            }
        }

        #endregion
    }
}
