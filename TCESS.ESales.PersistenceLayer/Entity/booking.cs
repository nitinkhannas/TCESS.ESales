//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class booking : EntityBase
    {
        #region Primitive Properties
    
        public virtual int Booking_Id
        {
            get;
            set;
        }
    
        public virtual int Booking_Cust_Id
        {
            get { return _booking_Cust_Id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_booking_Cust_Id != value)
                    {
                        if (customer != null && customer.Cust_Id != value)
                        {
                            customer = null;
                        }
                        _booking_Cust_Id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _booking_Cust_Id;
    
        public virtual Nullable<int> Booking_Agent_Id
        {
            get { return _booking_Agent_Id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_booking_Agent_Id != value)
                    {
                        if (agentdetail != null && agentdetail.Agent_Id != value)
                        {
                            agentdetail = null;
                        }
                        _booking_Agent_Id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _booking_Agent_Id;
    
        public virtual Nullable<System.DateTime> Booking_Date
        {
            get;
            set;
        }
    
        public virtual int Booking_Mode
        {
            get { return _booking_Mode; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_booking_Mode != value)
                    {
                        if (bookingmode != null && bookingmode.BookingMode_Id != value)
                        {
                            bookingmode = null;
                        }
                        _booking_Mode = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _booking_Mode;
    
        public virtual bool Booking_TruckType
        {
            get;
            set;
        }
    
        public virtual int Booking_MaterialType_Id
        {
            get { return _booking_MaterialType_Id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_booking_MaterialType_Id != value)
                    {
                        if (materialtype != null && materialtype.MaterialType_Id != value)
                        {
                            materialtype = null;
                        }
                        _booking_MaterialType_Id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _booking_MaterialType_Id;
    
        public virtual Nullable<int> Booking_Truck_Id
        {
            get { return _booking_Truck_Id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_booking_Truck_Id != value)
                    {
                        if (truckdetail != null && truckdetail.Truck_Id != value)
                        {
                            truckdetail = null;
                        }
                        _booking_Truck_Id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _booking_Truck_Id;
    
        public virtual Nullable<int> Booking_StandAlone_Truck_Id
        {
            get { return _booking_StandAlone_Truck_Id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_booking_StandAlone_Truck_Id != value)
                    {
                        if (standalonetruck != null && standalonetruck.StandaloneTruck_Id != value)
                        {
                            standalonetruck = null;
                        }
                        _booking_StandAlone_Truck_Id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _booking_StandAlone_Truck_Id;
    
        public virtual string Booking_DriverName
        {
            get;
            set;
        }
    
        public virtual string Booking_DriverAdd
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Booking_CounterId
        {
            get { return _booking_CounterId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_booking_CounterId != value)
                    {
                        if (counter != null && counter.Counter_Id != value)
                        {
                            counter = null;
                        }
                        _booking_CounterId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _booking_CounterId;
    
        public virtual Nullable<decimal> Booking_AdvanceAmount
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Booking_TotalAdvanceAmount
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Booking_BalanceAmount
        {
            get;
            set;
        }
    
        public virtual int Booking_TotalIssuedQty
        {
            get;
            set;
        }
    
        public virtual int Booking_Qty
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Booking_Status
        {
            get;
            set;
        }
    
        public virtual string Booking_RejectionReson
        {
            get;
            set;
        }
    
        public virtual bool Booking_MoneyReceiptIssued
        {
            get;
            set;
        }
    
        public virtual bool Booking_AccountSettled
        {
            get;
            set;
        }
    
        public virtual bool Booking_IsAdvanced
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Booking_IsFullAmount
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Booking_TruckIn
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Booking_TruckInTime
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Booking_TruckMatLifted
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Booking_TruckMatLiftedTime
        {
            get;
            set;
        }
    
        public virtual int Booking_CreatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Booking_CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Booking_LastUpdatedDate
        {
            get;
            set;
        }
    
        public virtual bool Booking_IsDeleted
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Booking_AccountSettledDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual agentdetail agentdetail
        {
            get { return _agentdetail; }
            set
            {
                if (!ReferenceEquals(_agentdetail, value))
                {
                    var previousValue = _agentdetail;
                    _agentdetail = value;
                    Fixupagentdetail(previousValue);
                }
            }
        }
        private agentdetail _agentdetail;
    
        public virtual ICollection<settlementofaccount> settlementofaccounts
        {
            get
            {
                if (_settlementofaccounts == null)
                {
                    var newCollection = new FixupCollection<settlementofaccount>();
                    newCollection.CollectionChanged += Fixupsettlementofaccounts;
                    _settlementofaccounts = newCollection;
                }
                return _settlementofaccounts;
            }
            set
            {
                if (!ReferenceEquals(_settlementofaccounts, value))
                {
                    var previousValue = _settlementofaccounts as FixupCollection<settlementofaccount>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsettlementofaccounts;
                    }
                    _settlementofaccounts = value;
                    var newValue = value as FixupCollection<settlementofaccount>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsettlementofaccounts;
                    }
                }
            }
        }
        private ICollection<settlementofaccount> _settlementofaccounts;
    
        public virtual counter counter
        {
            get { return _counter; }
            set
            {
                if (!ReferenceEquals(_counter, value))
                {
                    var previousValue = _counter;
                    _counter = value;
                    Fixupcounter(previousValue);
                }
            }
        }
        private counter _counter;
    
        public virtual customer customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    Fixupcustomer(previousValue);
                }
            }
        }
        private customer _customer;
    
        public virtual materialtype materialtype
        {
            get { return _materialtype; }
            set
            {
                if (!ReferenceEquals(_materialtype, value))
                {
                    var previousValue = _materialtype;
                    _materialtype = value;
                    Fixupmaterialtype(previousValue);
                }
            }
        }
        private materialtype _materialtype;
    
        public virtual bookingmode bookingmode
        {
            get { return _bookingmode; }
            set
            {
                if (!ReferenceEquals(_bookingmode, value))
                {
                    var previousValue = _bookingmode;
                    _bookingmode = value;
                    Fixupbookingmode(previousValue);
                }
            }
        }
        private bookingmode _bookingmode;
    
        public virtual standalonetruck standalonetruck
        {
            get { return _standalonetruck; }
            set
            {
                if (!ReferenceEquals(_standalonetruck, value))
                {
                    var previousValue = _standalonetruck;
                    _standalonetruck = value;
                    Fixupstandalonetruck(previousValue);
                }
            }
        }
        private standalonetruck _standalonetruck;
    
        public virtual truckdetail truckdetail
        {
            get { return _truckdetail; }
            set
            {
                if (!ReferenceEquals(_truckdetail, value))
                {
                    var previousValue = _truckdetail;
                    _truckdetail = value;
                    Fixuptruckdetail(previousValue);
                }
            }
        }
        private truckdetail _truckdetail;
    
        public virtual ICollection<moneyreceipt> moneyreceipts
        {
            get
            {
                if (_moneyreceipts == null)
                {
                    var newCollection = new FixupCollection<moneyreceipt>();
                    newCollection.CollectionChanged += Fixupmoneyreceipts;
                    _moneyreceipts = newCollection;
                }
                return _moneyreceipts;
            }
            set
            {
                if (!ReferenceEquals(_moneyreceipts, value))
                {
                    var previousValue = _moneyreceipts as FixupCollection<moneyreceipt>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupmoneyreceipts;
                    }
                    _moneyreceipts = value;
                    var newValue = value as FixupCollection<moneyreceipt>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupmoneyreceipts;
                    }
                }
            }
        }
        private ICollection<moneyreceipt> _moneyreceipts;
    
        public virtual ICollection<smsregistration> smsregistrations
        {
            get
            {
                if (_smsregistrations == null)
                {
                    var newCollection = new FixupCollection<smsregistration>();
                    newCollection.CollectionChanged += Fixupsmsregistrations;
                    _smsregistrations = newCollection;
                }
                return _smsregistrations;
            }
            set
            {
                if (!ReferenceEquals(_smsregistrations, value))
                {
                    var previousValue = _smsregistrations as FixupCollection<smsregistration>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsmsregistrations;
                    }
                    _smsregistrations = value;
                    var newValue = value as FixupCollection<smsregistration>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsmsregistrations;
                    }
                }
            }
        }
        private ICollection<smsregistration> _smsregistrations;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixupagentdetail(agentdetail previousValue)
        {
            if (previousValue != null && previousValue.bookings.Contains(this))
            {
                previousValue.bookings.Remove(this);
            }
    
            if (agentdetail != null)
            {
                if (!agentdetail.bookings.Contains(this))
                {
                    agentdetail.bookings.Add(this);
                }
                if (Booking_Agent_Id != agentdetail.Agent_Id)
                {
                    Booking_Agent_Id = agentdetail.Agent_Id;
                }
            }
            else if (!_settingFK)
            {
                Booking_Agent_Id = null;
            }
        }
    
        private void Fixupcounter(counter previousValue)
        {
            if (previousValue != null && previousValue.bookings.Contains(this))
            {
                previousValue.bookings.Remove(this);
            }
    
            if (counter != null)
            {
                if (!counter.bookings.Contains(this))
                {
                    counter.bookings.Add(this);
                }
                if (Booking_CounterId != counter.Counter_Id)
                {
                    Booking_CounterId = counter.Counter_Id;
                }
            }
            else if (!_settingFK)
            {
                Booking_CounterId = null;
            }
        }
    
        private void Fixupcustomer(customer previousValue)
        {
            if (previousValue != null && previousValue.bookings.Contains(this))
            {
                previousValue.bookings.Remove(this);
            }
    
            if (customer != null)
            {
                if (!customer.bookings.Contains(this))
                {
                    customer.bookings.Add(this);
                }
                if (Booking_Cust_Id != customer.Cust_Id)
                {
                    Booking_Cust_Id = customer.Cust_Id;
                }
            }
        }
    
        private void Fixupmaterialtype(materialtype previousValue)
        {
            if (previousValue != null && previousValue.bookings.Contains(this))
            {
                previousValue.bookings.Remove(this);
            }
    
            if (materialtype != null)
            {
                if (!materialtype.bookings.Contains(this))
                {
                    materialtype.bookings.Add(this);
                }
                if (Booking_MaterialType_Id != materialtype.MaterialType_Id)
                {
                    Booking_MaterialType_Id = materialtype.MaterialType_Id;
                }
            }
        }
    
        private void Fixupbookingmode(bookingmode previousValue)
        {
            if (previousValue != null && previousValue.bookings.Contains(this))
            {
                previousValue.bookings.Remove(this);
            }
    
            if (bookingmode != null)
            {
                if (!bookingmode.bookings.Contains(this))
                {
                    bookingmode.bookings.Add(this);
                }
                if (Booking_Mode != bookingmode.BookingMode_Id)
                {
                    Booking_Mode = bookingmode.BookingMode_Id;
                }
            }
        }
    
        private void Fixupstandalonetruck(standalonetruck previousValue)
        {
            if (previousValue != null && previousValue.bookings.Contains(this))
            {
                previousValue.bookings.Remove(this);
            }
    
            if (standalonetruck != null)
            {
                if (!standalonetruck.bookings.Contains(this))
                {
                    standalonetruck.bookings.Add(this);
                }
                if (Booking_StandAlone_Truck_Id != standalonetruck.StandaloneTruck_Id)
                {
                    Booking_StandAlone_Truck_Id = standalonetruck.StandaloneTruck_Id;
                }
            }
            else if (!_settingFK)
            {
                Booking_StandAlone_Truck_Id = null;
            }
        }
    
        private void Fixuptruckdetail(truckdetail previousValue)
        {
            if (previousValue != null && previousValue.bookings.Contains(this))
            {
                previousValue.bookings.Remove(this);
            }
    
            if (truckdetail != null)
            {
                if (!truckdetail.bookings.Contains(this))
                {
                    truckdetail.bookings.Add(this);
                }
                if (Booking_Truck_Id != truckdetail.Truck_Id)
                {
                    Booking_Truck_Id = truckdetail.Truck_Id;
                }
            }
            else if (!_settingFK)
            {
                Booking_Truck_Id = null;
            }
        }
    
        private void Fixupsettlementofaccounts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (settlementofaccount item in e.NewItems)
                {
                    item.booking = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (settlementofaccount item in e.OldItems)
                {
                    if (ReferenceEquals(item.booking, this))
                    {
                        item.booking = null;
                    }
                }
            }
        }
    
        private void Fixupmoneyreceipts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (moneyreceipt item in e.NewItems)
                {
                    item.booking = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (moneyreceipt item in e.OldItems)
                {
                    if (ReferenceEquals(item.booking, this))
                    {
                        item.booking = null;
                    }
                }
            }
        }
    
        private void Fixupsmsregistrations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (smsregistration item in e.NewItems)
                {
                    item.booking = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (smsregistration item in e.OldItems)
                {
                    if (ReferenceEquals(item.booking, this))
                    {
                        item.booking = null;
                    }
                }
            }
        }

        #endregion
    }
}
