//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TCESS.ESales.PersistenceLayer.Entity
{
    public partial class customer : EntityBase
    {
        #region Primitive Properties
    
        public virtual int Cust_Id
        {
            get;
            set;
        }
    
        public virtual string Cust_Code
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Cust_AgentId
        {
            get;
            set;
        }
    
        public virtual string Cust_TradeName
        {
            get;
            set;
        }
    
        public virtual string Cust_FirmName
        {
            get;
            set;
        }
    
        public virtual string Cust_OwnerName
        {
            get;
            set;
        }
    
        public virtual string Cust_FathersName
        {
            get;
            set;
        }
    
        public virtual string Cust_RegisteredAddress
        {
            get;
            set;
        }
    
        public virtual string Cust_UnitAddress
        {
            get;
            set;
        }
    
        public virtual string Cust_Post
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Cust_State
        {
            get { return _cust_State; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cust_State != value)
                    {
                        if (state != null && state.State_Id != value)
                        {
                            state = null;
                        }
                        _cust_State = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _cust_State;
    
        public virtual Nullable<int> Cust_District
        {
            get { return _cust_District; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cust_District != value)
                    {
                        if (district != null && district.Dist_Id != value)
                        {
                            district = null;
                        }
                        _cust_District = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _cust_District;
    
        public virtual string Cust_Landmark
        {
            get;
            set;
        }
    
        public virtual int Cust_Pincode
        {
            get;
            set;
        }
    
        public virtual string Cust_MobileNo
        {
            get;
            set;
        }
    
        public virtual string Cust_PhoneNo
        {
            get;
            set;
        }
    
        public virtual int Cust_OwnershipStatus
        {
            get { return _cust_OwnershipStatus; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cust_OwnershipStatus != value)
                    {
                        if (ownershipstatu != null && ownershipstatu.OwnershipStatus_Id != value)
                        {
                            ownershipstatu = null;
                        }
                        _cust_OwnershipStatus = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _cust_OwnershipStatus;
    
        public virtual int Cust_BusinessType
        {
            get { return _cust_BusinessType; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cust_BusinessType != value)
                    {
                        if (businesstype != null && businesstype.BusinessType_Id != value)
                        {
                            businesstype = null;
                        }
                        _cust_BusinessType = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _cust_BusinessType;
    
        public virtual int Cust_SalesType
        {
            get;
            set;
        }
    
        public virtual bool Cust_RegCustType
        {
            get;
            set;
        }
    
        public virtual string Cust_PartnerPhoneNo
        {
            get;
            set;
        }
    
        public virtual int Cust_AMEBlockId
        {
            get { return _cust_AMEBlockId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cust_AMEBlockId != value)
                    {
                        if (ameblock != null && ameblock.Blocks_Id != value)
                        {
                            ameblock = null;
                        }
                        _cust_AMEBlockId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _cust_AMEBlockId;
    
        public virtual Nullable<System.DateTime> Cust_AMEVisitDate
        {
            get;
            set;
        }
    
        public virtual bool Cust_Status
        {
            get;
            set;
        }
    
        public virtual int Cust_NoOfChimneys
        {
            get;
            set;
        }
    
        public virtual int Cust_BrickCapacity
        {
            get;
            set;
        }
    
        public virtual string Cust_Excise_Range
        {
            get;
            set;
        }
    
        public virtual string Cust_Excise_Div
        {
            get;
            set;
        }
    
        public virtual string Cust_Excise_Comm
        {
            get;
            set;
        }
    
        public virtual bool Cust_IsBlacklisted
        {
            get;
            set;
        }
    
        public virtual string Cust_BlacklistedBy
        {
            get;
            set;
        }
    
        public virtual string Cust_FolderName
        {
            get;
            set;
        }
    
        public virtual int Cust_CreatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Cust_CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Cust_LastUpdatedDate
        {
            get;
            set;
        }
    
        public virtual bool Cust_IsDeleted
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Cust_SmsSent
        {
            get;
            set;
        }
    
        public virtual string Cust_BankName
        {
            get;
            set;
        }
    
        public virtual string Cust_BankBranch
        {
            get;
            set;
        }
    
        public virtual string Cust_BankAccountNo
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Cust_BankAccountType
        {
            get;
            set;
        }
    
        public virtual string Cust_BankIFCICode
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Cust_BankChequeNo
        {
            get;
            set;
        }
    
        public virtual bool Cust_IsVarified
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<affidavitdetail> affidavitdetails
        {
            get
            {
                if (_affidavitdetails == null)
                {
                    var newCollection = new FixupCollection<affidavitdetail>();
                    newCollection.CollectionChanged += Fixupaffidavitdetails;
                    _affidavitdetails = newCollection;
                }
                return _affidavitdetails;
            }
            set
            {
                if (!ReferenceEquals(_affidavitdetails, value))
                {
                    var previousValue = _affidavitdetails as FixupCollection<affidavitdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupaffidavitdetails;
                    }
                    _affidavitdetails = value;
                    var newValue = value as FixupCollection<affidavitdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupaffidavitdetails;
                    }
                }
            }
        }
        private ICollection<affidavitdetail> _affidavitdetails;
    
        public virtual ameblock ameblock
        {
            get { return _ameblock; }
            set
            {
                if (!ReferenceEquals(_ameblock, value))
                {
                    var previousValue = _ameblock;
                    _ameblock = value;
                    Fixupameblock(previousValue);
                }
            }
        }
        private ameblock _ameblock;
    
        public virtual ICollection<authrepdetail> authrepdetails
        {
            get
            {
                if (_authrepdetails == null)
                {
                    var newCollection = new FixupCollection<authrepdetail>();
                    newCollection.CollectionChanged += Fixupauthrepdetails;
                    _authrepdetails = newCollection;
                }
                return _authrepdetails;
            }
            set
            {
                if (!ReferenceEquals(_authrepdetails, value))
                {
                    var previousValue = _authrepdetails as FixupCollection<authrepdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupauthrepdetails;
                    }
                    _authrepdetails = value;
                    var newValue = value as FixupCollection<authrepdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupauthrepdetails;
                    }
                }
            }
        }
        private ICollection<authrepdetail> _authrepdetails;
    
        public virtual ICollection<booking> bookings
        {
            get
            {
                if (_bookings == null)
                {
                    var newCollection = new FixupCollection<booking>();
                    newCollection.CollectionChanged += Fixupbookings;
                    _bookings = newCollection;
                }
                return _bookings;
            }
            set
            {
                if (!ReferenceEquals(_bookings, value))
                {
                    var previousValue = _bookings as FixupCollection<booking>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupbookings;
                    }
                    _bookings = value;
                    var newValue = value as FixupCollection<booking>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupbookings;
                    }
                }
            }
        }
        private ICollection<booking> _bookings;
    
        public virtual businesstype businesstype
        {
            get { return _businesstype; }
            set
            {
                if (!ReferenceEquals(_businesstype, value))
                {
                    var previousValue = _businesstype;
                    _businesstype = value;
                    Fixupbusinesstype(previousValue);
                }
            }
        }
        private businesstype _businesstype;
    
        public virtual ICollection<custauthorizationdetail> custauthorizationdetails
        {
            get
            {
                if (_custauthorizationdetails == null)
                {
                    var newCollection = new FixupCollection<custauthorizationdetail>();
                    newCollection.CollectionChanged += Fixupcustauthorizationdetails;
                    _custauthorizationdetails = newCollection;
                }
                return _custauthorizationdetails;
            }
            set
            {
                if (!ReferenceEquals(_custauthorizationdetails, value))
                {
                    var previousValue = _custauthorizationdetails as FixupCollection<custauthorizationdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcustauthorizationdetails;
                    }
                    _custauthorizationdetails = value;
                    var newValue = value as FixupCollection<custauthorizationdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcustauthorizationdetails;
                    }
                }
            }
        }
        private ICollection<custauthorizationdetail> _custauthorizationdetails;
    
        public virtual ICollection<form27c> form27c
        {
            get
            {
                if (_form27c == null)
                {
                    var newCollection = new FixupCollection<form27c>();
                    newCollection.CollectionChanged += Fixupform27c;
                    _form27c = newCollection;
                }
                return _form27c;
            }
            set
            {
                if (!ReferenceEquals(_form27c, value))
                {
                    var previousValue = _form27c as FixupCollection<form27c>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupform27c;
                    }
                    _form27c = value;
                    var newValue = value as FixupCollection<form27c>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupform27c;
                    }
                }
            }
        }
        private ICollection<form27c> _form27c;
    
        public virtual ICollection<customerpartner> customerpartners
        {
            get
            {
                if (_customerpartners == null)
                {
                    var newCollection = new FixupCollection<customerpartner>();
                    newCollection.CollectionChanged += Fixupcustomerpartners;
                    _customerpartners = newCollection;
                }
                return _customerpartners;
            }
            set
            {
                if (!ReferenceEquals(_customerpartners, value))
                {
                    var previousValue = _customerpartners as FixupCollection<customerpartner>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcustomerpartners;
                    }
                    _customerpartners = value;
                    var newValue = value as FixupCollection<customerpartner>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcustomerpartners;
                    }
                }
            }
        }
        private ICollection<customerpartner> _customerpartners;
    
        public virtual ICollection<customerdocdetail> customerdocdetails
        {
            get
            {
                if (_customerdocdetails == null)
                {
                    var newCollection = new FixupCollection<customerdocdetail>();
                    newCollection.CollectionChanged += Fixupcustomerdocdetails;
                    _customerdocdetails = newCollection;
                }
                return _customerdocdetails;
            }
            set
            {
                if (!ReferenceEquals(_customerdocdetails, value))
                {
                    var previousValue = _customerdocdetails as FixupCollection<customerdocdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcustomerdocdetails;
                    }
                    _customerdocdetails = value;
                    var newValue = value as FixupCollection<customerdocdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcustomerdocdetails;
                    }
                }
            }
        }
        private ICollection<customerdocdetail> _customerdocdetails;
    
        public virtual district district
        {
            get { return _district; }
            set
            {
                if (!ReferenceEquals(_district, value))
                {
                    var previousValue = _district;
                    _district = value;
                    Fixupdistrict(previousValue);
                }
            }
        }
        private district _district;
    
        public virtual ownershipstatu ownershipstatu
        {
            get { return _ownershipstatu; }
            set
            {
                if (!ReferenceEquals(_ownershipstatu, value))
                {
                    var previousValue = _ownershipstatu;
                    _ownershipstatu = value;
                    Fixupownershipstatu(previousValue);
                }
            }
        }
        private ownershipstatu _ownershipstatu;
    
        public virtual state state
        {
            get { return _state; }
            set
            {
                if (!ReferenceEquals(_state, value))
                {
                    var previousValue = _state;
                    _state = value;
                    Fixupstate(previousValue);
                }
            }
        }
        private state _state;
    
        public virtual ICollection<customermaterialmap> customermaterialmaps
        {
            get
            {
                if (_customermaterialmaps == null)
                {
                    var newCollection = new FixupCollection<customermaterialmap>();
                    newCollection.CollectionChanged += Fixupcustomermaterialmaps;
                    _customermaterialmaps = newCollection;
                }
                return _customermaterialmaps;
            }
            set
            {
                if (!ReferenceEquals(_customermaterialmaps, value))
                {
                    var previousValue = _customermaterialmaps as FixupCollection<customermaterialmap>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcustomermaterialmaps;
                    }
                    _customermaterialmaps = value;
                    var newValue = value as FixupCollection<customermaterialmap>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcustomermaterialmaps;
                    }
                }
            }
        }
        private ICollection<customermaterialmap> _customermaterialmaps;
    
        public virtual ICollection<form27c_history> form27c_history
        {
            get
            {
                if (_form27c_history == null)
                {
                    var newCollection = new FixupCollection<form27c_history>();
                    newCollection.CollectionChanged += Fixupform27c_history;
                    _form27c_history = newCollection;
                }
                return _form27c_history;
            }
            set
            {
                if (!ReferenceEquals(_form27c_history, value))
                {
                    var previousValue = _form27c_history as FixupCollection<form27c_history>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupform27c_history;
                    }
                    _form27c_history = value;
                    var newValue = value as FixupCollection<form27c_history>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupform27c_history;
                    }
                }
            }
        }
        private ICollection<form27c_history> _form27c_history;
    
        public virtual ICollection<paymentrefund> paymentrefunds
        {
            get
            {
                if (_paymentrefunds == null)
                {
                    var newCollection = new FixupCollection<paymentrefund>();
                    newCollection.CollectionChanged += Fixuppaymentrefunds;
                    _paymentrefunds = newCollection;
                }
                return _paymentrefunds;
            }
            set
            {
                if (!ReferenceEquals(_paymentrefunds, value))
                {
                    var previousValue = _paymentrefunds as FixupCollection<paymentrefund>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuppaymentrefunds;
                    }
                    _paymentrefunds = value;
                    var newValue = value as FixupCollection<paymentrefund>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuppaymentrefunds;
                    }
                }
            }
        }
        private ICollection<paymentrefund> _paymentrefunds;
    
        public virtual ICollection<smsregistration> smsregistrations
        {
            get
            {
                if (_smsregistrations == null)
                {
                    var newCollection = new FixupCollection<smsregistration>();
                    newCollection.CollectionChanged += Fixupsmsregistrations;
                    _smsregistrations = newCollection;
                }
                return _smsregistrations;
            }
            set
            {
                if (!ReferenceEquals(_smsregistrations, value))
                {
                    var previousValue = _smsregistrations as FixupCollection<smsregistration>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsmsregistrations;
                    }
                    _smsregistrations = value;
                    var newValue = value as FixupCollection<smsregistration>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsmsregistrations;
                    }
                }
            }
        }
        private ICollection<smsregistration> _smsregistrations;
    
        public virtual ICollection<truckdetail> truckdetails
        {
            get
            {
                if (_truckdetails == null)
                {
                    var newCollection = new FixupCollection<truckdetail>();
                    newCollection.CollectionChanged += Fixuptruckdetails;
                    _truckdetails = newCollection;
                }
                return _truckdetails;
            }
            set
            {
                if (!ReferenceEquals(_truckdetails, value))
                {
                    var previousValue = _truckdetails as FixupCollection<truckdetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptruckdetails;
                    }
                    _truckdetails = value;
                    var newValue = value as FixupCollection<truckdetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptruckdetails;
                    }
                }
            }
        }
        private ICollection<truckdetail> _truckdetails;
    
        public virtual ICollection<paymentcollection> paymentcollections
        {
            get
            {
                if (_paymentcollections == null)
                {
                    var newCollection = new FixupCollection<paymentcollection>();
                    newCollection.CollectionChanged += Fixuppaymentcollections;
                    _paymentcollections = newCollection;
                }
                return _paymentcollections;
            }
            set
            {
                if (!ReferenceEquals(_paymentcollections, value))
                {
                    var previousValue = _paymentcollections as FixupCollection<paymentcollection>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuppaymentcollections;
                    }
                    _paymentcollections = value;
                    var newValue = value as FixupCollection<paymentcollection>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuppaymentcollections;
                    }
                }
            }
        }
        private ICollection<paymentcollection> _paymentcollections;
    
        public virtual ICollection<smspaymentregistration> smspaymentregistrations
        {
            get
            {
                if (_smspaymentregistrations == null)
                {
                    var newCollection = new FixupCollection<smspaymentregistration>();
                    newCollection.CollectionChanged += Fixupsmspaymentregistrations;
                    _smspaymentregistrations = newCollection;
                }
                return _smspaymentregistrations;
            }
            set
            {
                if (!ReferenceEquals(_smspaymentregistrations, value))
                {
                    var previousValue = _smspaymentregistrations as FixupCollection<smspaymentregistration>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsmspaymentregistrations;
                    }
                    _smspaymentregistrations = value;
                    var newValue = value as FixupCollection<smspaymentregistration>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsmspaymentregistrations;
                    }
                }
            }
        }
        private ICollection<smspaymentregistration> _smspaymentregistrations;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixupameblock(ameblock previousValue)
        {
            if (previousValue != null && previousValue.customers.Contains(this))
            {
                previousValue.customers.Remove(this);
            }
    
            if (ameblock != null)
            {
                if (!ameblock.customers.Contains(this))
                {
                    ameblock.customers.Add(this);
                }
                if (Cust_AMEBlockId != ameblock.Blocks_Id)
                {
                    Cust_AMEBlockId = ameblock.Blocks_Id;
                }
            }
        }
    
        private void Fixupbusinesstype(businesstype previousValue)
        {
            if (previousValue != null && previousValue.customers.Contains(this))
            {
                previousValue.customers.Remove(this);
            }
    
            if (businesstype != null)
            {
                if (!businesstype.customers.Contains(this))
                {
                    businesstype.customers.Add(this);
                }
                if (Cust_BusinessType != businesstype.BusinessType_Id)
                {
                    Cust_BusinessType = businesstype.BusinessType_Id;
                }
            }
        }
    
        private void Fixupdistrict(district previousValue)
        {
            if (previousValue != null && previousValue.customers.Contains(this))
            {
                previousValue.customers.Remove(this);
            }
    
            if (district != null)
            {
                if (!district.customers.Contains(this))
                {
                    district.customers.Add(this);
                }
                if (Cust_District != district.Dist_Id)
                {
                    Cust_District = district.Dist_Id;
                }
            }
            else if (!_settingFK)
            {
                Cust_District = null;
            }
        }
    
        private void Fixupownershipstatu(ownershipstatu previousValue)
        {
            if (previousValue != null && previousValue.customers.Contains(this))
            {
                previousValue.customers.Remove(this);
            }
    
            if (ownershipstatu != null)
            {
                if (!ownershipstatu.customers.Contains(this))
                {
                    ownershipstatu.customers.Add(this);
                }
                if (Cust_OwnershipStatus != ownershipstatu.OwnershipStatus_Id)
                {
                    Cust_OwnershipStatus = ownershipstatu.OwnershipStatus_Id;
                }
            }
        }
    
        private void Fixupstate(state previousValue)
        {
            if (previousValue != null && previousValue.customers.Contains(this))
            {
                previousValue.customers.Remove(this);
            }
    
            if (state != null)
            {
                if (!state.customers.Contains(this))
                {
                    state.customers.Add(this);
                }
                if (Cust_State != state.State_Id)
                {
                    Cust_State = state.State_Id;
                }
            }
            else if (!_settingFK)
            {
                Cust_State = null;
            }
        }
    
        private void Fixupaffidavitdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (affidavitdetail item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (affidavitdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupauthrepdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (authrepdetail item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (authrepdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupbookings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (booking item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (booking item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupcustauthorizationdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (custauthorizationdetail item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (custauthorizationdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupform27c(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (form27c item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (form27c item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupcustomerpartners(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (customerpartner item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (customerpartner item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupcustomerdocdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (customerdocdetail item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (customerdocdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupcustomermaterialmaps(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (customermaterialmap item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (customermaterialmap item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupform27c_history(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (form27c_history item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (form27c_history item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixuppaymentrefunds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (paymentrefund item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (paymentrefund item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupsmsregistrations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (smsregistration item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (smsregistration item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixuptruckdetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (truckdetail item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (truckdetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixuppaymentcollections(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (paymentcollection item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (paymentcollection item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }
    
        private void Fixupsmspaymentregistrations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (smspaymentregistration item in e.NewItems)
                {
                    item.customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (smspaymentregistration item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer, this))
                    {
                        item.customer = null;
                    }
                }
            }
        }

        #endregion
    }
}
